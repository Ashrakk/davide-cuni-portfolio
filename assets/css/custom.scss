.particle_container {
	height: 100%;
	width: 100%;
	overflow: hidden;
}

.particle_outer {
	$particleWidth: 4;
	$particleCount: 40;
	overflow: hidden;

	position: absolute;
	transform: translateY(-10vh);
	animation-iteration-count: infinite;
	animation-timing-function: linear;

	.particle_inner {
		width: 100%;
		height: 100%;
		overflow: hidden;
		border-radius: 50%;
		mix-blend-mode: screen;
		background-image: radial-gradient(
			hsl(43, 96%, 56%),
			hsl(43, 96%, 56%) 10%,
			hsla(43, 96%, 56%, 0) 56%
		);

		animation:
			fadein-frames 200ms infinite,
			scale-frames 2s infinite;

		@keyframes fade-frames {
			0% {
				opacity: 1;
			}

			50% {
				opacity: 0.7;
			}

			100% {
				opacity: 1;
			}
		}

		@keyframes scale-frames {
			0% {
				transform: scale3d(0.4, 0.4, 1);
			}

			50% {
				transform: scale3d(2.2, 2.2, 1);
			}

			100% {
				transform: scale3d(0.4, 0.4, 1);
			}
		}
	}

	@for $i from 1 through $particleCount {
		&:nth-child(#{$i}) {
			$circleSize: random($particleWidth);
			width: $circleSize + px;
			height: $circleSize + px;

			$startPositionY: random(10) + 100;
			$framesName: "move-frames-" + $i;
			$moveDuration: 7000 + random(4000) + ms;

			animation-name: #{$framesName};
			animation-duration: $moveDuration;
			animation-delay: random(11000) + ms;

			@keyframes #{$framesName} {
				from {
					transform: translate3d(
						#{random(100) + vw},
						#{$startPositionY + vh},
						0
					);
				}

				to {
					transform: translate3d(
						#{random(100) + vw},
						#{- $startPositionY - random(30) + vh},
						0
					);
				}
			}

			.particle_inner {
				animation-delay: random(4000) + ms;
			}
		}
	}
}

.radial_gradient:before {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	background: radial-gradient(ellipse closest-side, #333, transparent);
	animation: radial-scale 4000ms infinite ease-in-out;
	transition: all 0.6s;
}

@keyframes radial-scale {
	from {
		transform: scale(0.75);
	}
	50% {
		transform: scale(0.6);
	}
	to {
		transform: scale(0.75);
	}
}
